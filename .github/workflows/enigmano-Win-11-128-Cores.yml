name: "‚ö° Custom RDP Session (4-Core, 16GB RAM) - Corrected"

on:
  workflow_dispatch:

jobs:
  build:
    name: "üöÄ Start Windows RDP Session"
    runs-on: windows-latest

    env:
      NGROK_AUTH_TOKEN: ${{ secrets.NGROK_SHAHZAIB }}

    steps:
      - name: "üöÄ Setup RDP and Start Ngrok"
        id: setup
        shell: pwsh
        run: |
          # --- SCRIPT UPDATED HERE ---
          # Set user and password
          $password = "P@ssword" # Change this to a secure password
          $user = "rdpuser22"
          
          # Delete the user if they already exist to ensure a clean slate
          iex "net user $user /delete"
          
          # Create a fresh user account and add it to the Administrators group
          iex "net user /add $user $password"
          iex "net localgroup administrators $user /add"
          
          # Enable RDP and disable Network Level Authentication
          iex "reg add 'HKLM\System\CurrentControlSet\Control\Terminal Server' /v fDenyTSConnections /t REG_DWORD /d 0 /f"
          iex "reg add 'HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' /v UserAuthentication /t REG_DWORD /d 0 /f"
          Write-Host "‚úÖ Fresh user account created and RDP enabled."

          # Download and set up the latest Ngrok version
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"
          Expand-Archive ngrok.zip -DestinationPath "ngrok"
          cd ngrok

          # Authenticate and start the tunnel
          ./ngrok.exe authtoken $env:NGROK_AUTH_TOKEN
          Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389 --log ../ngrok.log --region us"
          
          Write-Host "‚úÖ Ngrok setup complete. Waiting 20 seconds for tunnel..."
          Start-Sleep -s 20
          
          # Read the log file to find the URL
          if (Test-Path -Path "../ngrok.log") {
              $logContent = Get-Content -Path "../ngrok.log"
              Write-Host "--- Ngrok Log Content ---"
              $logContent | ForEach-Object { Write-Host $_ }
              Write-Host "--- End of Ngrok Log ---"

              $rdpConnection = ($logContent | Select-String -Pattern "url=(tcp://.+)" | Select-Object -First 1).Matches.Groups[1].Value
              
              if ($rdpConnection) {
                  Write-Host " "
                  Write-Host "‚úÖ RDP Connection Ready!"
                  Write-Host "   Connect to: $rdpConnection"
                  Write-Host "   Username: runneradmin"
                  Write-Host "   Password: mridul"
                  Write-Host " "
              } else {
                  Write-Error "‚ùå CRITICAL: Could not find Ngrok URL in the log. The tunnel failed to start. Check the log for errors."
                  exit 1
              }
          } else {
              Write-Error "‚ùå CRITICAL: ngrok.log file was not created. Ngrok failed to launch."
              exit 1
          }

      - name: "‚è≥ Keep RDP Session Alive"
        shell: pwsh
        run: |
          Write-Host "‚úÖ RDP session is active. This job will continue for up to 6 hours."
          Write-Host "   To end the session, cancel the GitHub Actions workflow."
          Start-Sleep -s 21000
          Write-Host "   To end the session, cancel the GitHub Actions workflow."
          Start-Sleep -s 21000 # Keep alive for just under 6 hours
